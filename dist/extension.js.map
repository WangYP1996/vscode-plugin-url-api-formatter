{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCpBf,eAEA,oBAAyBQ,GAErB,IAAIC,EAAQ,GACRC,EAAYC,EAAOC,SAASC,gBAAgB,+BAA+B,KAC3EF,EAAOG,OAAOC,eAAeC,MAAKC,IAC9BR,EAASQ,GAAO,SAGpBC,EAAQ,4CACRC,EAAWR,EAAOC,SAASC,gBAAgB,8BAA8B,KACzEF,EAAOG,OAAOC,aAAa,CACvBK,MAAOF,EACPG,YAAa,uEACdL,MAAKC,IACJ,MAAMK,EAAOL,GAAKM,MAAM,UAAYN,GAAKM,MAAM,SACzCC,EAAOP,GAAKM,MAAM,SAClBE,EAAUR,GAAKM,MAAM,aAAeN,GAAKM,MAAM,YAClDD,GAAQE,GAAQC,GACfP,EAAQD,GAAOC,EACfP,EAAOG,OAAOY,uBAAuB,WAErCf,EAAOG,OAAOa,iBAAiB,oBAI1CC,EAAajB,EAAOC,SAASC,gBAAgB,gCAAgC,KAC1E,MAAMgB,EAASlB,EAAOG,OAAOgB,kBAAkBC,UAAUF,OACnDG,GAAaH,GAAU,CAACI,MAAO,IAAIA,KACzC,IAAkB,IAAfD,EACC,OAEJ,MAAME,EAAYvB,EAAOG,OAAOgB,kBAAkBK,SAASC,OAAOJ,GAAWK,iCACvEC,EAAW3B,EAAOG,OAAOgB,kBAAkBK,SAASC,OAAOJ,GAAWO,KAAKC,OAC3EC,EAAQ,IAAI9B,EAAO+B,MACrB,IAAI/B,EAAOgC,SAASX,GAAa,EAAGE,GAAa,GACjD,IAAIvB,EAAOgC,SAASX,GAAa,EAAGM,GAAY,IAE9CM,EAAajC,EAAOG,OAAOgB,kBAAkBK,SAASU,QAAQJ,IAAU,GACxEK,GAAUF,EAAWrB,QAAQ,YAAc,IAAI,GAC/CwB,EAAgBH,EAAWI,QAAQF,EAAQ,IAC3CG,GAAUH,GAAU,IAAII,MAAM,GAC9BC,EAAMJ,EAAcC,QAAQvC,EAAQ,IAAIuC,QAAQ,aAAc,IACpErC,EAAOG,OAAOgB,kBAAkBsB,MAAKC,IACjC,IAAIC,EAAa,GAC0C,eAAxD3C,EAAOG,OAAOgB,kBAAkBK,SAASoB,aACxCD,EAAa,YAEjB,IAAIE,EAAM,GAAGL,EAAIH,QAAQ,eAAgB,SAASE,MAAM,GACpDO,EAASvC,EACR8B,QAAQ,qBAAsB,GAAGC,EAASA,EAAO,IAAK,KAAKO,KAC3DR,QAAQ,qBAAsB,GAAGC,EAASA,EAAO,IAAK,KAAKO,EAAIE,iBAC/DV,QAAQ,qBAAsB,GAAGC,EAASA,EAAOS,cAAc,IAAK,KAAKF,KACzER,QAAQ,qBAAsB,GAAGC,EAASA,EAAOS,cAAc,IAAK,KAAKF,EAAIE,iBAC7EV,QAAQ,WAAYQ,GACpBR,QAAQ,WAAYQ,EAAIE,eACxBV,QAAQ,cAAeC,GACvBD,QAAQ,cAAeC,EAAOS,eAC9BV,QAAQ,WAAYG,GACpBH,QAAQ,kBAAmBM,GAC3BN,QAAQ,OAAQ,MACrBK,EAAYL,QAAQP,EAAOgB,SAGnCjD,EAAQmD,cAAcC,KAAKlD,GAC3BF,EAAQmD,cAAcC,KAAKzC,GAC9BX,EAAQmD,cAAcC,KAAKhC,IAG5B,2B","sources":["webpack://url-api-formatter/external commonjs \"vscode\"","webpack://url-api-formatter/webpack/bootstrap","webpack://url-api-formatter/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nimport * as vscode from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t\n    let prefix= '';\n    let setPrefix = vscode.commands.registerCommand('url-api-formatter.setPrefix', () => {\n        vscode.window.showInputBox().then(val => {\n            prefix = val || '';\n        });\n\t});\n    let model = `const ##METHOD##KEY##typeAssert = '##url'`;\n    let setModel = vscode.commands.registerCommand('url-api-formatter.setModel', () => {\n        vscode.window.showInputBox({\n            value: model,\n            placeHolder: `请输入字符串格式化模板： ##url, ##method(##METHOD), ##key(##KEY), ##typeAssert`\n        }).then(val => {\n            const _key = val?.match('##key') || val?.match(\"##KEY\");\n            const _url = val?.match('##url');\n            const _method = val?.match('##method') || val?.match(\"##METHOD\");\n            if(_key && _url && _method) {\n                model = val || model;\n                vscode.window.showInformationMessage(\"模板修改成功\");\n            } else {\n                vscode.window.showErrorMessage('输入模板字符串不规范');\n            }\n        });\n\t});\n\tlet disposable = vscode.commands.registerCommand('url-api-formatter.formartUrl', () => {\n        const anchor = vscode.window.activeTextEditor?.selection.anchor;\n        const startLine = (anchor || {line: -1}).line;\n        if(startLine === -1) {\n            return;\n        }\n        const firstChar = vscode.window.activeTextEditor?.document.lineAt(startLine).firstNonWhitespaceCharacterIndex;\n        const lastChar = vscode.window.activeTextEditor?.document.lineAt(startLine).text.length;\n        const range = new vscode.Range(\n            new vscode.Position(startLine || 0, firstChar || 0), \n            new vscode.Position(startLine || 0, lastChar || 0)\n        );\n        const originText = vscode.window.activeTextEditor?.document.getText(range) || '';\n        const method = (originText.match?.(/@[a-z]+/) || [])[0];\n        const unprefixedUrl = originText.replace(method, '');\n        const METHOD = (method || '').slice(1);\n        const URL = unprefixedUrl.replace(prefix, '').replace(/\\{[a-z]+\\}/, '');\n        vscode.window.activeTextEditor?.edit(editBuilder => {\n            let typeAssert = '';\n            if(vscode.window.activeTextEditor?.document.languageId === 'typescript'){\n                typeAssert = ': string';\n            }\n            let KEY = `${URL.replace(/\\/([a-z-]+)/g, '_$1')}`.slice(1);\n            let result = model\n                .replace(/\\#\\#method\\#\\#key/g, `${METHOD ? METHOD+'_': ''}${KEY}`)\n                .replace(/\\#\\#method\\#\\#KEY/g, `${METHOD ? METHOD+'_': ''}${KEY.toUpperCase()}`)\n                .replace(/\\#\\#METHOD\\#\\#key/g, `${METHOD ? METHOD.toUpperCase()+'_': ''}${KEY}`)\n                .replace(/\\#\\#METHOD\\#\\#KEY/g, `${METHOD ? METHOD.toUpperCase()+'_': ''}${KEY.toUpperCase()}`)\n                .replace(/\\#\\#key/g, KEY)\n                .replace(/\\#\\#KEY/g, KEY.toUpperCase())\n                .replace(/\\#\\#method/g, METHOD)\n                .replace(/\\#\\#METHOD/g, METHOD.toUpperCase())\n                .replace(/\\#\\#url/g, URL)\n                .replace(/\\#\\#typeAssert/g, typeAssert)\n                .replace(/\\\\n/g, '\\n');\n            editBuilder.replace(range, result);\n        });\n\t});\n    context.subscriptions.push(setPrefix);\n    context.subscriptions.push(setModel);\n\tcontext.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","prefix","setPrefix","vscode","commands","registerCommand","window","showInputBox","then","val","model","setModel","value","placeHolder","_key","match","_url","_method","showInformationMessage","showErrorMessage","disposable","anchor","activeTextEditor","selection","startLine","line","firstChar","document","lineAt","firstNonWhitespaceCharacterIndex","lastChar","text","length","range","Range","Position","originText","getText","method","unprefixedUrl","replace","METHOD","slice","URL","edit","editBuilder","typeAssert","languageId","KEY","result","toUpperCase","subscriptions","push"],"sourceRoot":""}